service: fileflow

plugins:
  - serverless-step-functions

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  memorySize: 128

  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:GetObject
        - s3:CopyObject
        - s3:DeleteObject
        - s3:HeadObject
      Resource:
        - !GetAtt SourceBucket.Arn
        - !GetAtt ArchiveBucket.Arn

  environment:
    SOURCEBUCKET: !Ref SourceBucket
    ARCHIVEBUCKET: !Ref ArchiveBucket
    FFTOPIC: !Ref IngestionTopic

functions:
  # for each put file event in source bucket, invoke step functions with file prefix/key and lambda arn from SSM
  # if no lambda is specified in SSM, send to DLQ, maybe send SNS message
  FlowRunner:
    handler: src/lambdas/FlowRunner.handler
  
  # verify file exists with headObject, verify lambda exists with getFunction
  VerifyInput:
    handler: src/lambdas/sfn/VerifyInput.handler
  
  # invoke Lambda with file prefix/key and wait for task token
  CallLambda:
    handler: src/lambdas/sfn/CallLambda.handler
  
  # publish to SNS that file completed, copy file to archive with same prefix/key + date suffix and delete from source 
  MoveSourceFile:
    handler: src/lambdas/sfn/MoveSourceFile.handler

resources:
  Resources:
    # send put file event to IngestionQueue, move files to ArchiveBucket when finished
    SourceBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-sourcebucket

    # store ingested files in here
    ArchiveBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-archivebucket

    # holds put file events from SourceBucket
    IngestionQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-ingestionqueue

    # store S3 SourceBucket events that were rejected by IngestionLambda
    IngestionDLQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-ingestiondlqueue

    # send notifications with file prefix/key as parameter
    IngestionTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${self:provider.stage}-ingestiontopic
